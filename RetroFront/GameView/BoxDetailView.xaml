<UserControl x:Class="RetroFront.GameView.BoxDetailView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RetroFront.GameView"
             mc:Ignorable="d" 
             xmlns:extender="clr-namespace:RetroFront.Converter"
	  xmlns:xf="clr-namespace:XamlFlair;assembly=XamlFlair.WPF"
	  xmlns:xfc="clr-namespace:XamlFlair.Controls;assembly=XamlFlair.WPF"
        xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>
    <UserControl.Background>
        <ImageBrush ImageSource="{Binding BCKImg}" Stretch="Fill" TileMode="None"></ImageBrush>
    </UserControl.Background>
    <UserControl.InputBindings>
        <KeyBinding Key="Left" Command="{Binding GoDownCommand}"></KeyBinding>
        <KeyBinding Key="Right" Command="{Binding GoUpCommand}"></KeyBinding>
        <KeyBinding Key="Down" Command="{Binding GoUpCommand}"></KeyBinding>
        <KeyBinding Key="Up" Command="{Binding GoDownCommand}"></KeyBinding>
        <KeyBinding Key="Space" Command="{Binding OpenDisplayCommand}"></KeyBinding>
        <KeyBinding Key="Return" Command="{Binding CloseOrGoCommand}"></KeyBinding>
    </UserControl.InputBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*"></ColumnDefinition>
            <ColumnDefinition Width="2*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <ListView x:Name="listicon" Grid.Column="0" SelectionMode="Single" Style="{DynamicResource MaterialDesignListView}"
                          HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                         IsSynchronizedWithCurrentItem="True" Background="Transparent" Loaded="listicon_Loaded"
                    ItemsSource="{Binding Games}" SelectedIndex="{Binding SelectedIndex,Mode=TwoWay}" SelectionChanged="listicon_SelectionChanged"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Hidden">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" IsItemsHost="True" SizeChanged="WrapPanel_SizeChanged"></WrapPanel>
                    <!--<UniformGrid Columns="5"/>-->
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.InputBindings>
                <KeyBinding Key="Space" Command="{Binding OpenDisplayCommand}"></KeyBinding>
                <KeyBinding Key="Return" Command="{Binding CloseOrGoCommand}"></KeyBinding>
            </ListView.InputBindings>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Border>
                            <Image Source="{Binding Boxart}" Stretch="Uniform" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Image>
                        </Border>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Margin" Value="25"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border x:Name="RootBorder">
                                    <ContentPresenter/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="RootBorder" Property="Background" Value="Transparent"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="White" Opacity="0.8" BlurRadius="100"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
        <Grid Grid.Column="1" Margin="50">
            <Grid.Background>
                <SolidColorBrush Color="Black" Opacity="0.7"></SolidColorBrush>
            </Grid.Background>
            <Grid.RowDefinitions>
            <RowDefinition Height="4*"></RowDefinition>
            <RowDefinition Height="2*"></RowDefinition>
            <RowDefinition Height="4*"></RowDefinition>
            </Grid.RowDefinitions>
            <Border Grid.Row="1" Visibility="{Binding ShowDetail, 
                             Converter={StaticResource BooleanToVisibilityConverter}}">
                <Image Source="{Binding CurerntGameVM.Logo}" Stretch="Uniform" Margin="10"
                    xf:Animations.Primary="{xf:Animate BasedOn={StaticResource ScaleFromRight}, Delay=250,Event=None}"
                    xf:Animations.PrimaryBinding="{Binding AnimeDetail}"></Image>
            </Border>
            <Border Grid.Row="0" Visibility="{Binding ShowDetail, 
                             Converter={StaticResource BooleanToVisibilityConverter}}">
                <MediaElement Stretch="Uniform" Source="{Binding Path=CurerntGameVM.Video}" Margin="10"
                    xf:Animations.Primary="{xf:Animate BasedOn={StaticResource ScaleFromTop}, Delay=250,Event=None}"
                    xf:Animations.PrimaryBinding="{Binding AnimeDetail}"></MediaElement>
            </Border>
            <Border Grid.Row="2" Visibility="{Binding ShowDetail, 
                             Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock Text="{Binding Path=CurerntGameVM.Desc}" Style="{DynamicResource MaterialDesignTextBlock}"
                       Foreground="WhiteSmoke" TextAlignment="Justify" TextWrapping="WrapWithOverflow" FontSize="30"
                    xf:Animations.Primary="{xf:Animate BasedOn={StaticResource ScaleFromBottom}, Delay=250,Event=None}"
                    xf:Animations.PrimaryBinding="{Binding AnimeDetail}"></TextBlock>
            </Border>
        </Grid>
        <!--xf:Animations.Primary="{xf:Animate BasedOn={StaticResource ScaleFromRight}, Delay=250,Event=DataContextChanged}"-->
    </Grid>
</UserControl>
